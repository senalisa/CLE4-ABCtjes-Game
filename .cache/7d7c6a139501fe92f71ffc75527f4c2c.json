{"dependencies":[{"name":"@pixi/display","loc":{"line":8,"column":41}}],"generated":{"js":"\"use strict\";\n\nvar _display = require(\"@pixi/display\");\n\n/**\n * The instance name of the object.\n *\n * @memberof PIXI.DisplayObject#\n * @member {string} name\n */\n_display.DisplayObject.prototype.name = null;\n/**\n * Returns the display object in the container.\n *\n * Recursive searches are done in a preorder traversal.\n *\n * @method getChildByName\n * @memberof PIXI.Container#\n * @param {string} name - Instance name.\n * @param {boolean}[deep=false] - Whether to search recursively\n * @return {PIXI.DisplayObject} The child with the specified name.\n */\n/*!\n * @pixi/mixin-get-child-by-name - v6.3.2\n * Compiled Wed, 04 May 2022 17:49:13 UTC\n *\n * @pixi/mixin-get-child-by-name is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n_display.Container.prototype.getChildByName = function getChildByName(name, deep) {\n  for (var i = 0, j = this.children.length; i < j; i++) {\n    if (this.children[i].name === name) {\n      return this.children[i];\n    }\n  }\n  if (deep) {\n    for (var i = 0, j = this.children.length; i < j; i++) {\n      var child = this.children[i];\n      if (!child.getChildByName) {\n        continue;\n      }\n      var target = this.children[i].getChildByName(name, true);\n      if (target) {\n        return target;\n      }\n    }\n  }\n  return null;\n};\n//# sourceMappingURL=mixin-get-child-by-name.js.map"},"hash":"f24db5c69eed71b4192c4f95f3ce6bef"}