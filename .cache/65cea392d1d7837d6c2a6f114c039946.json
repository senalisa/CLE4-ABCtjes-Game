{"dependencies":[{"name":"@pixi/display","loc":{"line":8,"column":30}},{"name":"@pixi/math","loc":{"line":9,"column":22}}],"generated":{"js":"\"use strict\";\n\nvar _display = require(\"@pixi/display\");\n\nvar _math = require(\"@pixi/math\");\n\n/**\n * Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.\n *\n * @method getGlobalPosition\n * @memberof PIXI.DisplayObject#\n * @param {PIXI.Point} [point=new PIXI.Point()] - The point to write the global value to.\n * @param {boolean} [skipUpdate=false] - Setting to true will stop the transforms of the scene graph from\n *  being updated. This means the calculation returned MAY be out of date BUT will give you a\n *  nice performance boost.\n * @return {PIXI.Point} The updated point.\n */\n/*!\n * @pixi/mixin-get-global-position - v6.3.2\n * Compiled Wed, 04 May 2022 17:49:13 UTC\n *\n * @pixi/mixin-get-global-position is licensed under the MIT License.\n * http://www.opensource.org/licenses/mit-license\n */\n_display.DisplayObject.prototype.getGlobalPosition = function getGlobalPosition(point, skipUpdate) {\n  if (point === void 0) {\n    point = new _math.Point();\n  }\n  if (skipUpdate === void 0) {\n    skipUpdate = false;\n  }\n  if (this.parent) {\n    this.parent.toGlobal(this.position, point, skipUpdate);\n  } else {\n    point.x = this.position.x;\n    point.y = this.position.y;\n  }\n  return point;\n};\n//# sourceMappingURL=mixin-get-global-position.js.map"},"hash":"342d6db5cf96ac5282ceeb2ee6edaec3"}